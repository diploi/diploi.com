---
import { Info } from '@phosphor-icons/react'
import PricingToggle from './PricingToggle.astro'

interface Props {
  pricing: {
    averageDaysInMonth: number
    averageWorkingDaysInMonth: number
    averageWorkingHoursInDay: number
  }
}

const { pricing } = Astro.props

const {
  averageDaysInMonth,
  averageWorkingDaysInMonth,
  averageWorkingHoursInDay,
} = pricing
---

<fieldset data-hours={20 * 8}>
  <legend>I want to use Diploi for</legend>

  <div id="type-container" class="development">
    <PricingToggle name="type" value="development" label="Development" />
    <PricingToggle name="type" value="testing" label="Testing" />
    <PricingToggle name="type" value="production" label="Production" />
    <p class="development help">
      <Info /> Assuming a developer uses the environment 7 hours / workday.
    </p>
    <p class="testing help">
      <Info /> A test environment needs to run only when needed, we assume 25 % of
      the time.
    </p>
    <p class="production help">
      <Info /> A production environment will run 24/7.
    </p>
  </div>
</fieldset>

<script
  define:vars={{
    averageDaysInMonth,
    averageWorkingDaysInMonth,
    averageWorkingHoursInDay,
  }}
>
  const developmentHours = averageWorkingDaysInMonth * averageWorkingHoursInDay
  const testingHours = averageDaysInMonth * 0.25 * 24
  const productionHours = averageDaysInMonth * 24

  const hoursElement = document.querySelector('[data-hours]')
  const typeContainerElement = document.getElementById('type-container')

  const updateHours = () => {
    const selectedType = document.querySelector(
      'input[name="type"]:checked',
    ).value

    let hours = developmentHours
    if (selectedType === 'testing') hours = testingHours
    if (selectedType === 'production') hours = productionHours

    typeContainerElement.setAttribute('class', selectedType)
    hoursElement.setAttribute('data-hours', `${hours}`)

    document.dispatchEvent(new Event('pricing-update'))
  }

  document
    .querySelectorAll('input[name="type"]')
    .forEach((element) => element.addEventListener('change', updateHours))

  document.querySelector('input[value="development"]').checked = true
</script>

<style>
  fieldset {
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;
    width: 100%;
    border: none;
  }

  legend {
    display: flex;
    position: relative;
    margin-bottom: var(--space-s);
    color: var(--color-text-primary);
  }

  #type-container {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    gap: var(--space-l);

    @media (min-width: 768px) {
      flex-direction: row;
    }
  }

  #type-container > p {
    display: none;
    align-items: center;
    gap: 6px;
    margin: 0;
    width: 100%;
    max-width: 100%;
  }

  #type-container > p > svg {
    transform: translateY(-1px);
  }

  #type-container.development .development {
    display: flex;
  }

  #type-container.testing .testing {
    display: flex;
  }

  #type-container.production .production {
    display: flex;
  }

  .help {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }
</style>
