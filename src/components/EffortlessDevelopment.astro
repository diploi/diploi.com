---
import { BlobCanvas } from './react';
import Icon from './Icon.astro';
type Props = {
  title: string;
  description: string;
  points: string[];
};

const { title, description, points } = Astro.props;
---

<div class="effortless-development">
  <div class="window">
    <span></span>
    <span></span>
    <span></span>
  </div>
  <div class="content">
    <div>
      <h3>{title}</h3>
      <p>{description}</p>
    </div>
    <ul>
      {
        points.map((point) => (
          <li>
            <div>
              <p>{point}</p>
              <span>...........................................</span>
            </div>
            <span class="icon-container">
              <Icon
                name="CheckSquare"
                color="#53B365"
                weight="regular"
                sizeRem={2}
              />
            </span>
          </li>
        ))
      }
    </ul>
  </div>
  <BlobCanvas client:load />
</div>

<style lang="scss">
  @use '../styles/mixins';

  .effortless-development {
    @include mixins.gradient-border;
    @include mixins.gradient-bg;
    display: flex;
    flex-direction: column;
    align-items: top;
    position: relative;
    overflow: hidden;
    border-radius: var(--border-radius-medium);
  }

  .content {
    padding: var(--space-xl);
    position: relative;
    background-color: rgba(0, 0, 0, 0.2);
    @include mixins.respond-to('tablet') {
      padding: var(--space-xxl) var(--space-huge);
      padding-bottom: var(--space-huge);
    }
  }

  .window {
    display: flex;
    align-items: center;
    gap: var(--space-s);
    padding: var(--space-m);
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-bg-secondary);
    box-shadow:
      rgba(0, 0, 0, 0.25) 0px 54px 55px,
      rgba(0, 0, 0, 0.12) 0px -12px 30px,
      rgba(0, 0, 0, 0.12) 0px 4px 6px,
      rgba(0, 0, 0, 0.17) 0px 12px 13px,
      rgba(0, 0, 0, 0.09) 0px -3px 5px;

    > span {
      display: inline-block;
      width: 12px;
      height: 12px;
      background: var(--color-text-tertiary);
      border-radius: 50%;
    }
  }

  ul {
    margin-top: var(--space-xl);
    font-family: monospace;
    display: flex;
    flex-direction: column;
    gap: var(--space-s);

    li {
      gap: 0.25rem;
      display: inline-flex;
      align-items: end;
      position: relative;
      display: grid;
      grid-template-columns: auto auto;
      align-items: center;
      @include mixins.respond-to('tablet') {
        grid-template-columns: 512px 1fr;
      }

      > div {
        display: flex;
        overflow: hidden;
        > span {
          transform: translateY(5px);
          color: var(--color-text-tertiary);
        }
        > p {
          flex-shrink: 0;
          color: var(--color-text-primary);
          font-family: monospace;
          font-size: 1.125rem;
          &::before, &::after {
            padding-right: var(--space-s);
            color: var(--color-text-tertiary);
            font-weight: 600;
            font-size: 1.25rem;
          }
          &::before {
            content: '[';
            padding-right: var(--space-s);
          }

          &::after {
            content: ']';
            padding-left: var(--space-s);
          }
        }
      }
    }
  }

  .icon-container {
    padding-left: var(--space-s);
    padding: 0;
    display: flex;
    height: 100%;
    transform: translateY(-3px);
  }

  .blob-canvas {
    position: absolute;
    left: 0;
    z-index: -1;
  }
</style>
