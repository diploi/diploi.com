---
import { CheckCircle, Plus } from '@phosphor-icons/react'
import Toggle from './Toggle.astro'
import PlansPricing from './PlansPricing.astro'

interface Props {
  pricing: {
    deployment: number
    coreInstancePrice: {
      name: string
      price: number
      rootStorageSizeGiB: number
      memoryGiB: number
      vCpu: number
    }[]
  }
}

const { pricing } = Astro.props
---

<div class='cards'>
  <!-- <Toggle /> -->

  <ul role="list" class="list">
    <!-- Entry -->
    <li class="card free">
      <ul>
        <li class="header">
          <h3 class="title">Free Trial</h3>
        </li>
        <li class="content">
          <PlansPricing pricing={pricing} />
          <div class="overlay">
            <div class="help credit">
              <p>50â‚¬ of Free Credits</p>
            </div>
            <!-- <div class="help">
            Same pricing as Pro, trial is free as long as credits last.
            Remaining credit will transfer to Pro when upgraded.
          </div> -->
          </div>
        </li>
        <li class="footer">
          <ul class="features">
            <li><CheckCircle size={16} weight="bold" /> Everything in Pro</li>
            <li><Plus size={16} weight="bold" /> No credit-card required</li>
            <li><Plus size={16} weight="bold" /> No restrictions</li>
          </ul>
          <a data-event="getstarted_click" class="button" href="/#invite"
            >Get Started</a
          >
        </li>
      </ul>
    </li>

    <!-- Pro -->
    <li class="card background-gradient">
      <ul>
        <li class="header">
          <h3 class="title">Pro</h3>
        </li>
        <li class="content">
          <PlansPricing pricing={pricing} />
        </li>
        <li class="footer">
          <ul class="features">
            <li><Plus size={16} weight="bold" /> Unlimited users</li>
            <li><Plus size={16} weight="bold" /> All core features</li>
          </ul>
          <!-- <a data-event="pro_click" class="button" href="#contact-us" -->
          <!--   >Upgrade to Pro</a -->
          <!-- > -->
          <a
            data-event="contactus_click"
            class="button secondary"
            href="#contact-us">Contact Us</a
          >
        </li>
      </ul>
    </li>

    <!-- Enterprise -->
    <li class="card background-gradient">
      <ul>
        <li class="header">
          <h3 class="title">Enterprise</h3>
        </li>
        <li class="content">
          <p class="quote">Ask for a quote</p>
          <p class="quote help">
            Deployment & resource pricing are both negotiable based on your
            needs
          </p>
        </li>
        <li class="footer">
          <ul class="features">
            <li><CheckCircle size={16} weight="bold" /> Everything in Pro</li>
            <li><Plus size={16} weight="bold" /> Custom templates</li>
            <li><Plus size={16} weight="bold" /> Premium SLA</li>
            <li><Plus size={16} weight="bold" /> Premium support</li>
          </ul>
          <a
            data-event="contactus_click"
            class="button secondary"
            href="#contact-us">Contact Us</a
          >
        </li>
      </ul>
    </li>
  </ul>
</div>

<!-- <script>
  const toggle = document.getElementById('toggle');
  const hourly = document.querySelectorAll('.clusters.hourly');
  const monthly = document.querySelectorAll('.clusters.monthly');

  (toggle as HTMLInputElement).checked = false;

  toggle?.addEventListener('change', event => {
    let hourlyDisplay = 'flex';
    let monthlyDisplay = 'none';
    if ((event.target as HTMLInputElement)?.checked) {
      hourlyDisplay = 'none';
      monthlyDisplay = 'flex';
    }

    hourly.forEach(item =>
      item.setAttribute('style', `display: ${hourlyDisplay}`)
    );
    monthly.forEach(item =>
      item.setAttribute('style', `display: ${monthlyDisplay}`)
    );
  });
</script> -->

<style lang="scss">
  @use '../styles/mixins';

  .cards {
    width: 100%;
  }

  .card {
    @include mixins.card-desktop;
    width: 100%;
  }

  section {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: 32px;
  }

  .list {
    display: grid;
    justify-content: center;
    grid-gap: var(--space-l);
    @media (min-width: 992px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .card {
    padding: 0;
    max-width: 512px;

    > ul {
      width: 100%;
      height: 100%;
      display: grid;
      grid-template-rows: auto 1fr auto;
    }

    &.free {
      overflow: hidden;
    }

    .header {
      padding-bottom: 1px;
      background: linear-gradient(
          to left,
          transparent 0%,
          var(--color-border) 50%,
          transparent 100%
        )
        left bottom transparent no-repeat;
      background-size: 100% 1px;
    }

    .footer {
      padding-top: 1px;
      background: linear-gradient(
          to left,
          transparent 0%,
          var(--color-border) 50%,
          transparent 100%
        )
        left top transparent no-repeat;

      background-size: 100% 1px;
    }

    .header,
    .content,
    .footer {
      padding: var(--space-xl) var(--space-xl);
    }

    .content {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;

      gap: 2rem;
      > * {
        margin: 0;
      }
    }

    .header {
      padding-top: var(--space-l);
      .title {
        margin: 0;
        z-index: 1;
        font-size: 1.5rem;
      }
    }

    .footer {
      display: flex;
      flex-direction: column;
      gap: var(--space-xl);
      align-items: flex-start;
      @media (min-width: 1280px) {
        min-height: 243px;
      }
      & > .button {
        margin-top: auto;
      }
    }
  }

  .features {
    display: flex;
    flex-direction: column;
    gap: var(--space-s);
  }

  .card.free::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(
      -45deg,
      var(--color-primary),
      var(--color-secondary)
    );
    opacity: 0.3;
    z-index: -1;
  }

  .overlay {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    opacity: 1;
  }

  .overlay::before {
    content: '';
    position: absolute;
    display: block;
    top: -100%;
    left: -100%;
    width: 200%;
    height: 200%;
    background-image: url(../images/blur.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 200%;
    filter: blur(45px);
  }

  .price {
    margin-top: 0;
    font-size: 1rem;
    font-family: 'Montserrat', sans-serif;
  }

  .credit {
    position: relative;
    display: flex;
    align-items: center;
    margin-top: 8px;
    margin-bottom: 8px;
    background-color: var(--color-secondary);
    border-radius: var(--border-radius-medium);
    padding: var(--space-l) var(--space-xl);
    color: var(--color-white);
    background-color: var(--color-bg);
    transform: rotate(-8deg);
    box-shadow:
      rgba(0, 0, 0, 0.25) 0px 13px 27px -5px,
      rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;

    > svg {
      position: absolute;
      top: -8px;
      left: -8px;
      padding: 4px;
      background: var(--color-primary);
      border-radius: 50%;
    }

    > p {
      margin: 0;
      color: var(--color-text-primary);
      font-size: 1.75rem;
    }
  }

  .quote {
    text-align: center;
    max-width:  40ch;
  }

  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    font-size: 1rem;
  }

  .button,
  button {
    justify-content: center;
    width: 100%;
    &.basic {
      background-color: transparent;
      border: 1px solid var(--color-border);
    }
  }
</style>
