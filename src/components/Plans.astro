---
import { CheckCircle, Plus } from '@phosphor-icons/react';
import Toggle from './Toggle.astro';
import PlansPricing from './PlansPricing.astro';

interface Props {
  pricing: {
    deployment: number;
    coreInstancePrice: {
      name: string;
      price: number;
      rootStorageSizeGiB: number;
      memoryGiB: number;
      vCpu: number;
    }[];
  };
}

const { pricing } = Astro.props;
---

<section>
  <Toggle />

  <ul role="list" class="list">
    <!-- Entry -->
    <li class="card free">
      <ul>
        <li>
          <h2>Free Trial</h2>
        </li>
        <li>
          <PlansPricing pricing={pricing} />
          <div class="overlay">
            <div class="help credit">
              <p class="price">
                50<small>â‚¬</small>
              </p>
              <p>&nbsp;of Free Credits</p>
            </div>
            <!-- <div class="help">
            Same pricing as Pro, trial is free as long as credits last.
            Remaining credit will transfer to Pro when upgraded.
          </div> -->
          </div>
        </li>
        <li>
          <ul class="features">
            <li><CheckCircle size={16} weight="bold" /> Everything in Pro</li>
            <li><Plus size={16} weight="bold" /> No credit-card required</li>
            <li><Plus size={16} weight="bold" /> No restrictions</li>
          </ul>
        </li>
        <li>
          <a class="button" href="/#invite">Get Started</a>
        </li>
      </ul>
    </li>

    <!-- Pro -->
    <li class="card">
      <ul>
        <li>
          <h2>Pro</h2>
        </li>
        <li>
          <PlansPricing pricing={pricing} />
        </li>
        <li>
          <ul class="features">
            <li><Plus size={16} weight="bold" /> Unlimited users</li>
            <li><Plus size={16} weight="bold" /> All core features</li>
          </ul>
        </li>
        <li>
          <a class="button" href="#contact-us">Upgrade to Pro</a>
        </li>
      </ul>
    </li>

    <!-- Enterprise -->
    <li class="card">
      <ul>
        <li>
          <h2>Enterprise</h2>
        </li>
        <li>
          <p class="quote">Ask for a quote</p>
          <p class="quote help">
            Deployment & resource pricing are both negotiable based on your
            needs
          </p>
        </li>
        <li>
          <ul class="features">
            <li><CheckCircle size={16} weight="bold" /> Everything in Pro</li>
            <li><Plus size={16} weight="bold" /> Custom templates</li>
            <li><Plus size={16} weight="bold" /> Premium SLA</li>
            <li><Plus size={16} weight="bold" /> Premium support</li>
          </ul>
        </li>
        <li>
          <a class="button basic" href="#contact-us">Contact Us</a>
        </li>
      </ul>
    </li>
  </ul>
</section>

<script>
  const toggle = document.getElementById('toggle');
  const hourly = document.querySelectorAll('.clusters.hourly');
  const monthly = document.querySelectorAll('.clusters.monthly');

  toggle?.addEventListener('change', (event) => {
    let hourlyDisplay = 'flex';
    let monthlyDisplay = 'none';
    if ((event.target as HTMLInputElement)?.checked) {
      hourlyDisplay = 'none';
      monthlyDisplay = 'flex';
    }

    hourly.forEach((item) =>
      item.setAttribute('style', `display: ${hourlyDisplay}`)
    );
    monthly.forEach((item) =>
      item.setAttribute('style', `display: ${monthlyDisplay}`)
    );
  });
</script>

<style>
  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 32px;
    margin-top: 128px;
  }

  .list {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    margin: 0;
    padding: 0;
    list-style: none;
    gap: 32px;
  }

  .list > li {
    flex: 1;
  }

  .list > li.gap {
    flex: 0;
    flex-basis: 28px;
  }

  .card {
    position: relative;
    display: flex;
    width: 380px;
    min-width: 380px;
    max-width: 380px;
    border-radius: 24px;
    text-decoration: none;
    line-height: 1.4;
    background-color: var(--color-grey);
    color: white;
    overflow: hidden;
  }

  .card.free {
    background-color: transparent;
  }

  .card.free::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(
      -45deg,
      var(--color-primary),
      var(--color-secondary)
    );
    opacity: 0.3;
    z-index: -1;
  }

  .card > ul {
    display: flex;
    flex-direction: column;
    padding: 0;
    margin: 0;
    width: 100%;
    list-style: none;
  }

  .card > ul > li {
    position: relative;
    padding: 28px 32px;
  }

  .card > ul > li:nth-of-type(2) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    min-height: 160px;
    /* background-color: #2a2947; */
    background-color: rgba(0, 0, 0, 0.2);
    /* border-right: 4px solid var(--color-primary); */
  }

  .card.free > ul > li:nth-of-type(2) {
    /* background-color: #2f2865; */
    border-right: none;
  }

  .card > ul > li:last-of-type {
    display: flex;
    align-items: flex-end;
    flex: 1;
  }

  .card .features {
    margin: 0;
    padding: 0;
    list-style: none;
    opacity: 0.8;
  }

  .card .features > li {
    display: flex;
    align-items: center;
    gap: 6px;
  }

  .card .features > li > :global(svg) {
    opacity: 0.5;
  }

  .overlay {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    top: 0;
    left: 0;
    padding: 0 32px;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.1);
    /* background: linear-gradient(
      to bottom,
      rgba(47, 40, 101, 0.85),
      rgba(47, 40, 101, 1)
    ); */
    box-sizing: border-box;
    opacity: 1;
  }

  .overlay::before {
    content: '';
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url(../images/blur.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 70%;
    filter: blur(45px);
  }

  .overlay .help:not(.credit) {
    font-size: 0.64rem;
  }

  .features {
    font-size: 1rem;
  }

  .price {
    margin-top: 0;
    font-size: 1rem;
    font-family: 'Montserrat', sans-serif;
  }

  .help {
    font-family: 'Source Sans 3', sans-serif;
    font-size: 0.64rem;
    color: #b6bdc8;
  }

  .above,
  .below {
    display: flex;
    align-items: center;
    gap: 4px;
    transform: translateX(-6px);
  }

  .above {
    margin-top: -8px;
    margin-bottom: 16px;
  }

  .below {
    margin-top: 24px;
  }

  .credit {
    position: relative;
    display: flex;
    align-items: center;
    margin-top: 8px;
    margin-bottom: 8px;
    padding: 12px 16px;
    background-color: var(--color-secondary);
    border-radius: 6px;
    /* border: 2px solid var(--color-primary); */
    color: var(--color-white);

    transform: scale(1.1) rotate(-8deg);
  }

  .credit > :global(svg) {
    position: absolute;
    top: -8px;
    left: -8px;
    padding: 4px;
    background: var(--color-primary);
    border-radius: 50%;
  }

  .credit p {
    opacity: 1;
  }

  .credit p:not(.price) {
    flex: 1;
    margin-top: 0;
    font-family: 'Montserrat', sans-serif;
    font-size: 1rem;
  }

  .quote {
    text-align: center;
  }

  .quote:not(.help) {
    margin: 0;
    font-family: 'Montserrat', sans-serif;
    font-size: 1rem;
    text-align: center;
  }

  h2 {
    display: flex;
    align-items: center;
    gap: 8px;
    position: relative;
    margin: 0;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  h2::after {
    content: '';
    display: block;
    position: absolute;
    bottom: -6px;
    height: 4px;
    width: 60px;
    background-color: var(--color-primary);
    border-radius: 4px;
  }

  h2 > small {
    padding: 4px 8px;
    font-size: 1rem;
    background-color: #2a2947;
    border-radius: 6px;
  }

  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    font-size: 1rem;
  }

  .button,
  button {
    justify-content: center;
    width: 100%;
  }

  .button.basic,
  button.basic {
    background-color: rgba(0, 0, 0, 0.2);
  }
</style>
