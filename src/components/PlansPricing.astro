---
import { ArrowDown, Info } from '@phosphor-icons/react';

interface Props {
  pricing: {
    deployment: number;
    coreInstancePrice: {
      name: string;
      price: number;
      rootStorageSizeGiB: number;
      memoryGiB: number;
      vCpu: number;
    }[];
  };
}

const { pricing } = Astro.props;

const highlightedAppClusters = ['S', 'M', 'L'];

const formatter = new Intl.NumberFormat('fi-FI', {
  style: 'currency',
  currency: 'EUR',
  minimumFractionDigits: 3,
});

const monthlyFormatter = new Intl.NumberFormat('fi-FI', {
  style: 'currency',
  currency: 'EUR',
  minimumFractionDigits: 2,
});
---

<p class="help above">
  <Info /> Costs per app cluster size, starting at
</p>
<ul class="clusters hourly">
  {
    pricing.coreInstancePrice
      .filter((item) => highlightedAppClusters.includes(item.name))
      .map((item) => (
        <li>
          <h3>{item.name}</h3>
          <div class="price">
            <p>{formatter.format(item.price + pricing.deployment)}</p>
            <span class="help">/ app cluster / hour</span>
          </div>
        </li>
      ))
  }
</ul>
<ul class="clusters monthly">
  {
    pricing.coreInstancePrice
      .filter((item) => highlightedAppClusters.includes(item.name))
      .map((item) => (
        <li>
          <h3>{item.name}</h3>
          <div class="price">
            <p>
              {monthlyFormatter.format(
                (item.price + pricing.deployment) * 24 * 30
              )}
              <span class="help">
                prod or
                {monthlyFormatter.format(
                  (item.price + pricing.deployment) * 8 * 20
                )}{' '}
                dev
              </span>
            </p>
            <span class="help">/ app cluster / month</span>
          </div>
        </li>
      ))
  }
</ul>
<p class="help below">
  <ArrowDown /> More cluster sizes listed below
</p>

<style>
  .features {
    margin: 0;
    padding: 0;
    list-style: none;
    opacity: 0.8;
  }

  .features > li {
    display: flex;
    align-items: center;
    gap: 6px;
  }

  .features > li > :global(svg) {
    opacity: 0.5;
  }

  .clusters {
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 0;
    width: 100%;
  }

  .clusters > li {
    display: flex;
    align-items: flex-start;
    gap: 16px;
    text-align: left;
  }

  .clusters > li > h3 {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    width: 48px;
    height: 48px;
    /* background-color: var(--color-grey); */
    box-sizing: border-box;

    border: 2px solid rgba(255, 255, 255, 0.05);
    border-radius: 8px;
  }

  .clusters.monthly {
    display: none;
  }

  .price {
    margin-top: 0;
    font-size: 1rem;
    font-family: 'Montserrat', sans-serif;
  }

  .price > p {
    margin: 0;
  }

  .price > .help {
    display: block;
    transform: translateY(-4px);
    opacity: 0.7;
  }

  .help {
    font-family: 'Source Sans 3', sans-serif;
    font-size: 0.64rem;
    color: #b6bdc8;
  }

  .above,
  .below {
    display: flex;
    align-items: center;
    gap: 4px;
    transform: translateX(-6px);
  }

  .above {
    margin-top: -8px;
    margin-bottom: 16px;
  }

  .below {
    margin-top: 24px;
  }

  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    font-size: 1rem;
  }
</style>
