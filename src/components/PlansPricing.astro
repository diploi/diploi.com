---
interface Props {
  pricing: {
    deployment: number
    coreInstancePrice: {
      name: string
      price: number
      rootStorageSizeGiB: number
      memoryGiB: number
      vCpu: number
    }[]
  }
}

const { pricing } = Astro.props

const highlightedAppClusters = ['S', 'M', 'L']

const formatter = new Intl.NumberFormat('fi-FI', {
  style: 'currency',
  currency: 'EUR',
  minimumFractionDigits: 3,
})

const monthlyFormatter = new Intl.NumberFormat('fi-FI', {
  style: 'currency',
  currency: 'EUR',
  minimumFractionDigits: 2,
})
---

<h3 class="help above">Costs per app cluster size, starting at</h3>
<ul class="clusters hourly">
  {
    pricing.coreInstancePrice
      .filter((item) => highlightedAppClusters.includes(item.name))
      .map((item) => (
        <li>
          <h3>{item.name}</h3>
          <div class="price">
            <p>{formatter.format(item.price + pricing.deployment)}</p>
            <span class="help">/ App cluster / Hour</span>
          </div>
        </li>
      ))
  }
</ul>
<ul class="clusters monthly">
  {
    pricing.coreInstancePrice
      .filter((item) => highlightedAppClusters.includes(item.name))
      .map((item) => (
        <li>
          <h3>{item.name}</h3>
          <div class="price">
            <p>
              {monthlyFormatter.format(
                (item.price + pricing.deployment) * 24 * 30,
              )}
              <span class="help">
                prod or
                {monthlyFormatter.format(
                  (item.price + pricing.deployment) * 8 * 20,
                )}{' '}
                dev
              </span>
            </p>
            <span class="help">/ app cluster / month</span>
          </div>
        </li>
      ))
  }
</ul>
<p class="help below">More cluster sizes listed below</p>

<style>
  * {
    margin: 0;
  }
  .clusters {
    display: flex;
    flex-direction: column;
    gap: var(--space-xl);
    padding: 0;
    width: 100%;

    > li {
      display: flex;
      align-items: center;
      gap: var(--space-l);
      padding: 0;

      > h3 {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0;
        width: 48px;
        height: 48px;
        box-sizing: border-box;
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: var(--border-radius-medium);
      }
    }
  }

  .clusters.monthly {
    display: none;
  }

  .price {
    margin-top: 0;
    font-size: 1rem;
  }

  .price > p {
    margin: 0;
    color: var(--color-text-primary);
    font-size: 1rem;
  }

  .price > .help {
    display: block;
    color: var(--color-text-secondary);
    font-size: 0.75rem;
  }

  .help {
    font-size: 0.875rem;
    font-weight: 300;
    color: var(--color-text-secondary);
  }

  .above,
  .below {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    position: relative;
  }
</style>
