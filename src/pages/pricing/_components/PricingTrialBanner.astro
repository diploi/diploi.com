---
import { SealPercent } from '@phosphor-icons/react';
import { SparkleElement } from '../../../components/SparkleElement';
import PricingCard from './PricingCard.astro';
import Tag from '../../../components/Tag.astro';
---

<PricingCard trial>
  <header slot="header">
    <section>
      <h3><SealPercent weight="bold" /> Free Credits</h3>
      <Tag primary>No credit card required</Tag>
    </section>
    <p>Sign up & get free credits to try out the full Diploi experience</p>
  </header>

  <section class="content" slot="content">
    <SparkleElement sparkleCount={4} minSize={0.25} maxSize={0.75}>
      <section class="credits">
        {/* Animated "Credits" texts */}
        <svg width="30" height="60" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <pattern id="credits-up" width="14" height="62" patternUnits="userSpaceOnUse">
              <text x="-58" y="12" font-size="16" fill="currentColor" transform="rotate(-90)">CREDITS</text>
              <animate attributeName="y" from="-31" to="31" dur="5s" repeatCount="indefinite"></animate>
            </pattern>
            <pattern id="credits-down" width="14" height="62" patternUnits="userSpaceOnUse">
              <text x="-58" y="12" font-size="16" fill="currentColor" transform="rotate(-90)">CREDITS</text>
              <animate attributeName="y" from="31" to="-31" dur="5s" repeatCount="indefinite"></animate>
            </pattern>
            <pattern id="credits" width="28" height="62" patternUnits="userSpaceOnUse">
              <rect width="14" height="60" fill="url(#credits-up)"></rect>
              <rect x="14" width="14" height="60" fill="url(#credits-down)"></rect>
            </pattern>
          </defs>

          <rect width={28 * 3} height="62" transform="translate(14 -14) rotate(45)" fill="url(#credits)"></rect>
        </svg>

        <strong aria-label="credits">50<abbr>â‚¬</abbr></strong>
      </section>
    </SparkleElement>

    <a class="button" data-event="credits_click" href="https://console.diploi.com">Sign Up & Claim</a>
  </section>
</PricingCard>

<style lang="scss">
  @use '../../../styles/mixins';

  @property --position {
    initial-value: 0%;
    inherits: false;
    syntax: '<percentage>';
  }

  header > section {
    > h3 > svg {
      fill: url(#gradient-two);
    }
  }

  .content {
    display: flex;

    @media (max-width: 420px) {
      flex-direction: column;
      align-items: stretch;
      gap: 6px;
      width: 100%;

      > :global(.sparkle-element),
      .credits {
        width: 100%;
      }

      .credits {
        border-radius: 6px;

        > strong {
          flex: 1;
          text-align: center;
          transform: translateX(-12px);
        }
      }

      button {
        border-radius: 6px;
      }
    }
  }

  .credits {
    display: flex;
    align-items: center;
    padding: 0 14px;
    height: 60px;
    border: 1px solid var(--color-bg);
    border-radius: 6px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;

    > svg {
      position: absolute;
      left: 0;
      color: var(--color-bg);
      user-select: none;
      mask-image: linear-gradient(to right, white, transparent);
    }

    @keyframes shimmer-animation {
      0%,
      70% {
        --position: 0%;
      }
      100% {
        --position: 100%;
      }
    }

    strong {
      --color-text: var(--color-secondary);
      --color-text: color-mix(in lab, var(--color-secondary), white 40%);

      margin-left: 12px;
      font-size: 54px;
      line-height: 1;
      color: var(--color-text);

      background-image: linear-gradient(
        110deg,
        var(--color-text) calc(var(--position) - 10px),
        white var(--position),
        var(--color-text) calc(var(--position) + 10px)
      );
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;

      animation: shimmer-animation 6s infinite cubic-bezier(0.65, 0, 0.35, 1);

      > abbr {
        font-size: 2rem;
      }
    }
  }

  .button {
    padding: var(--space-l) var(--space-xl);
    background-color: var(--color-bg);
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;

    &:hover:not(:disabled) {
      background-color: var(--color-secondary);
      color: white;
    }
  }
</style>
