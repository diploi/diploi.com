---
import { Icon, SparkleElement } from '../../../components';
import { Canvas, BlobCanvas } from '../../../components/react';
---

<div class="hero">
  <div class="blobs">
    <BlobCanvas client:load />
  </div>
  <div class="content">
    <a
      data-event="news_stackbuilder_click"
      class="news"
      target="_blank"
      href="https://dev.to/diploi/easily-create-complex-stacks-in-just-a-few-clicks-new-release-3gdl"
    >
      <Icon name="Sparkle" weight="duotone" sizeRem={1} /> Stack Builder Released <Icon name="ArrowSquareOut" sizeRem={1} />
    </a>
    <h1 class="main-heading">
      <div class="diploi-canvas-container">
        <Canvas client:load />
      </div>
      <SparkleElement sparkleCount={4} minSize={0.5} maxSize={1.25}>
        <span class="text-gradient">Magical</span>
      </SparkleElement> Developer Experience
    </h1>
    <p class="subtitle">
      <span>Manage, develop and host full applications.</span>
    </p>
    <a data-event="hero_cta_click" href="#StackBuilder">
      <button>Get Started</button>
    </a>
    <ul class="links">
      <a data-event="github_click" target="_blank" href="https://github.com/diploi">
        <li>
          <Icon name="GithubLogo" sizeRem={1.275} /> GitHub
          <Icon name="ArrowSquareOut" sizeRem={1} />
        </li>
      </a>
      <a data-event="discord_click" target="_blank" href="https://discord.gg/vvgQxVjC8G">
        <li>
          <Icon name="DiscordLogo" sizeRem={1.275} /> Discord
          <Icon name="ArrowSquareOut" sizeRem={1} />
        </li>
      </a>
    </ul>
  </div>
</div>

<style lang="scss">
  @use '../../../styles/mixins';

  .hero {
    position: relative;
    display: flex;
    align-items: center;
    padding-top: 40px;
    max-width: 100vw;
    height: calc(100vh - (var(--header-height-px) + var(--space-huge) + var(--main-gap) + 24px));
    min-height: 500px;
    max-height: 1000px;
    text-align: center;
  }

  .blobs {
    position: absolute;
    inset: 0;
    top: calc(var(--header-height-px) * -2);
  }

  .content {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 992px;
    margin: 0 auto;
    text-align: center;

    p {
      margin-bottom: var(--space-xxl);
      font-size: 1.5rem;
    }

    > * {
      // opacity: 0;
      // animation: fadeIn 1000ms ease 1 forwards;
      // animation-delay: 500ms;
    }

    button {
      width: fit-content;
      cursor: pointer;
    }
  }

  .news {
    position: relative;
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 16px;
    padding: 6px 12px;
    border-radius: 1000px;
    color: var(--color-text-primary);
    text-decoration: none;
    z-index: 2;

    &::before {
      content: '';
      position: absolute;
      display: block;
      inset: 0;
      background:
        linear-gradient(black, black) padding-box,
        linear-gradient(45deg, var(--color-accent-primary), var(--color-accent-secondary)) border-box;
      border: 1px solid transparent;
      border-radius: 1000px;
      filter: saturate(2);
      z-index: -1;
    }

    &::after {
      content: '';
      position: absolute;
      display: block;
      inset: 1px;
      background:
        radial-gradient(circle at 0, var(--color-accent-primary), transparent 100px),
        radial-gradient(circle at 100%, var(--color-accent-secondary), transparent 100px);
      border-radius: 1000px;
      opacity: 0.4;
      z-index: -1;
    }
  }

  .diploi-canvas-container {
    position: absolute;
    inset: 0;
    top: 50%;
    left: 50%;
    width: 100%;
    transform: translate(-50%, -50%);
    aspect-ratio: 1/1;
    z-index: -1;
    animation: moveUpDown 8000ms ease-in-out infinite;
    animation-delay: 2000ms;
    pointer-events: none;
  }

  .main-heading {
    line-height: 1.1;
    font-weight: 600;
    position: relative;
  }

  .links {
    display: flex;
    flex-direction: column;
    gap: 6px;
    margin-top: 24px;

    a {
      font-size: 1rem;
      text-decoration: none;
    }

    li {
      display: flex;
      align-items: center;
      gap: 5px;

      > :global(svg:last-of-type) {
        opacity: 0.8;
      }
    }
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes moveUpDown {
    0% {
      transform: translate(-50%, -50%) translateY(0px);
    }
    50% {
      transform: translate(-50%, -50%) translateY(16px);
    }
    100% {
      transform: translate(-50%, -50%) translateY(0px);
    }
  }
</style>
