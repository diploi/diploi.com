---
import AiHeroDiploiFeatures from './AiHeroDiploiFeatures.astro';
import AiHeroFeatures from './AiHeroFeatures.astro';
import { SparkleElement } from '../../../components';
import { createStackBackgroundUri } from './aiUtils';
import AiLink from './AiLink.astro';
import AiHr from './AiHr.astro';

const background = createStackBackgroundUri({
  size: 16,
  primary: 'rgba(255, 255, 255, 0.05)',
  secondary: 'rgba(255, 255, 255, 0.05)',
  chance: 0.4,
});
const backgroundColor = createStackBackgroundUri({ size: 16, primary: '#6650fa', secondary: '#ec609c', chance: 0.8 });
---

<header>
  <div class="background" inert aria-hidden></div>
  <section>
    <h1>
      Platform for <SparkleElement sparkleCount={4} minSize={0.5} maxSize={1.25}
        ><span id="ai" class="text-gradient">AI</span></SparkleElement
      > Dev
    </h1>
    <p>Diploi is the first platform to integrate AI across the entire development lifecycle, while keeping you in command.</p>
    <a class="button" href="#stack-builder">Launch a New Project</a>
    {/*<AiLink href="/">Import an existing project</AiLink>*/}
    <AiLink href="#pricing">See pricing</AiLink>
  </section>
  <AiHeroFeatures />
  <AiHr />
  <AiHeroDiploiFeatures />
</header>

<script>
  window.addEventListener('load', () => {
    const aiText = document.querySelector('#ai');
    if (!aiText) return;

    const { top, left, width, height } = aiText.getBoundingClientRect();
    const x = left + width / 2;
    const y = top + height / 2;

    const background = document.querySelector('.background');
    if (!background) return;

    background.setAttribute('style', `${background.getAttribute('style')}--x:${x}px;--y:${y}px`);

    console.log(x, y);
  });
</script>

<style lang="scss" define:vars={{ background, backgroundColor }}>
  header {
    display: flex;
    flex-direction: column;
    gap: 64px;
    margin: 0 auto;
    width: 100%;
    max-width: var(--max-width-page-section);
  }

  header .text-gradient {
    --accent-gradient: linear-gradient(45deg, var(--color-primary), var(--color-secondary), var(--color-primary), var(--color-secondary));

    background-size: 400%;
    animation: gradient-animation 8s infinite alternate cubic-bezier(0.65, 0, 0.35, 1);

    @keyframes gradient-animation {
      0% {
        background-position: 0%;
      }
      100% {
        background-position: 100%;
      }
    }
  }

  section {
    margin: 64px 0;

    > h1 {
      margin-bottom: 8px;
    }

    > .button {
      margin: 32px 0 16px 0;
    }

    @media (max-width: 860px) {
      display: flex;
      flex-direction: column;
      align-items: center;

      > h1 {
        text-align: center;
      }

      > p {
        text-align: center;
      }
    }
  }

  @property --size {
    syntax: '<percentage>';
    inherits: false;
    initial-value: 0%;
  }

  .background {
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 65vh;
    overflow: hidden;
    z-index: -1;

    mask-image: linear-gradient(to bottom, white 50%, transparent);

    @keyframes background-animation {
      0% {
        --size: 0%;
        opacity: 1;
      }
      50% {
        opacity: 0;
      }
      100% {
        --size: 80%;
      }
    }

    &::after {
      position: absolute;
      content: '';
      display: block;
      inset: 0;
      background-image: var(--background);
      background-size: 896px;
      // transform: rotate(8deg);
    }

    &::before {
      position: absolute;
      content: '';
      display: block;
      inset: 0;
      background-image: var(--backgroundColor);
      background-size: 896px;
      // transform: rotate(8deg);
      opacity: 0;

      mask-image: radial-gradient(
        circle at var(--x) var(--y),
        transparent,
        transparent calc(var(--size) - 50px),
        white var(--size),
        transparent calc(var(--size) + 10px),
        transparent
      );

      animation: background-animation 8s infinite cubic-bezier(0.33, 1, 0.68, 1);
      animation-delay: 2s;
    }
  }
</style>
